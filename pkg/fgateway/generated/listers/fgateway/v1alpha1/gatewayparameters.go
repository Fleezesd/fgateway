/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	fgatewayv1alpha1 "github.com/fleezesd/fgateway/apis/fgateway/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// GatewayParametersLister helps list GatewayParameterses.
// All objects returned here must be treated as read-only.
type GatewayParametersLister interface {
	// List lists all GatewayParameterses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*fgatewayv1alpha1.GatewayParameters, err error)
	// GatewayParameterses returns an object that can list and get GatewayParameterses.
	GatewayParameterses(namespace string) GatewayParametersNamespaceLister
	GatewayParametersListerExpansion
}

// gatewayParametersLister implements the GatewayParametersLister interface.
type gatewayParametersLister struct {
	listers.ResourceIndexer[*fgatewayv1alpha1.GatewayParameters]
}

// NewGatewayParametersLister returns a new GatewayParametersLister.
func NewGatewayParametersLister(indexer cache.Indexer) GatewayParametersLister {
	return &gatewayParametersLister{listers.New[*fgatewayv1alpha1.GatewayParameters](indexer, fgatewayv1alpha1.Resource("gatewayparameters"))}
}

// GatewayParameterses returns an object that can list and get GatewayParameterses.
func (s *gatewayParametersLister) GatewayParameterses(namespace string) GatewayParametersNamespaceLister {
	return gatewayParametersNamespaceLister{listers.NewNamespaced[*fgatewayv1alpha1.GatewayParameters](s.ResourceIndexer, namespace)}
}

// GatewayParametersNamespaceLister helps list and get GatewayParameterses.
// All objects returned here must be treated as read-only.
type GatewayParametersNamespaceLister interface {
	// List lists all GatewayParameterses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*fgatewayv1alpha1.GatewayParameters, err error)
	// Get retrieves the GatewayParameters from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*fgatewayv1alpha1.GatewayParameters, error)
	GatewayParametersNamespaceListerExpansion
}

// gatewayParametersNamespaceLister implements the GatewayParametersNamespaceLister
// interface.
type gatewayParametersNamespaceLister struct {
	listers.ResourceIndexer[*fgatewayv1alpha1.GatewayParameters]
}
